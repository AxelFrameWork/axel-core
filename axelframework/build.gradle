buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}
plugins {
    id("maven-publish")
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'

/*
publishing {
    repositories {

		//<scm>
		//		<connection>scm:git:git@github.com:mwjmurphy/Axel-Framework</connection>
		//		<developerConnection>scm:git:git@github.com:mwjmurphy/Axel-Framework</developerConnection>
	  	//		<url>git@github.com:mwjmurphy/Axel-Framework</url>
		//</scm>
//        maven {
//            name = "GitHubPackages"
//            // url = uri("https://maven.pkg.github.com/AxelFrameWork/")
//			url = uri("https://maven.pkg.github.com/mwjmurphy/Axel-Framework/")
//            credentials {
//                username = System.getenv("github_user")
//                password = System.getenv("github_axel_token")
//            }
//        }
		maven {
			name = "ossrh"
			url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
			credentials {
				username = System.getenv("ssr_user")
				password = System.getenv("ssr_password")
			}
		}
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
*/


sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    // mavenLocal()
    mavenCentral()
}

compileJava {
    options.debug = true
}

archivesBaseName = 'axelframework'
version="$axelVersion"
group='org.xmlactions'


jar {

	from sourceSets.main.allJava

	manifest {
		attributes("product": "axelframework")
		attributes("description": "axelframework distribution jar file")
		attributes("vesion": version)
	}
}

sourceSets {
    main {
        java {
			srcDir project(':axel-common').file('src/main/java')
			srcDir project(':axel-action').file('src/main/java')
			srcDir project(':axel-email').file('src/main/java')
			srcDir project(':axel-mapping').file('src/main/java')
			srcDir project(':axel-web').file('src/main/java')
			srcDir project(':axel-db').file('src/main/java')
			srcDir project(':axel-web-db').file('src/main/java')
        }
        resources {
			srcDir project(':axel-common').file('src/main/resources')
			srcDir project(':axel-action').file('src/main/resources')
			srcDir project(':axel-email').file('src/main/resources')
			srcDir project(':axel-mapping').file('src/main/resources')
			srcDir project(':axel-web').file('src/main/resources')
			srcDir project(':axel-db').file('src/main/resources')
			srcDir project(':axel-web-db').file('src/main/resources')
        }
    }
}


dependencies {

	compile(
		project(':axel-common'),
		project(':axel-action'),
		project(':axel-email'),
		project(':axel-mapping'),
		project(':axel-web'),
		project(':axel-db'),
		project(':axel-web-db'),
	)

	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-beanutils:commons-beanutils:1.8.3'
	compile 'commons-configuration:commons-configuration:1.9'
	compile 'commons-io:commons-io:1.4'
	compile 'org.slf4j:slf4j-log4j12:1.7.30'
	compile 'rhino:js:1.7R2'
	compile 'dom4j:dom4j:1.6.1'
	compile 'bsf:bsf:2.4.0'
	compile (
		'org.springframework:spring-web:4.3.25.RELEASE',
		'org.springframework:spring-jdbc:4.3.25.RELEASE',
	)

	compile 'org.json:json:20140107'
	compile 'com.google.code.gson:gson:2.8.5'
    compile 'commons-fileupload:commons-fileupload:1.3.3'
	compile 'commons-digester:commons-digester:2.1'
	compile 'javax.mail:mail:1.4.7'	
	compile 'jasperreports:jasperreports:3.5.3'

	compile 'org.apache.tomcat:servlet-api:6.0.36'

	testCompile 'junit:junit:4.12'
	testCompile 'mysql:mysql-connector-java:5.1.25'
	testCompile 'org.apache.derby:derby:10.10.1.1'
	testCompile 'com.h2database:h2:1.4.183'
	compile 'org.springframework:spring-test:4.3.25.RELEASE'

}

//
// publish to central through sonatype
//
task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}
artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

signing {
	if (System.env.signingKey) {
		println("Using signingKey");
	    useInMemoryPgpKeys(System.env.signingKeyId, System.env.signingKey, System.env.signingPassword)
		sign configurations.archives
	} else {
		println("NOT using signingKey");
		sign configurations.archives
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: System.env.sonatypeUsername, password: System.env.sonatypePassword)
			}

			pom.project {
				name 'AxelFrameWork'
				packaging 'jar'
				description 'A Java Web Framework for building web sites'
				// url 'https://github.com/mwjmurphy/Axel-Framework'
				url 'https://github.com/AxelFrameWork/axel-core'

				scm {
					//url 'scm:git@github.com:mwjmurphy/Axel-Framework'
					//connection 'scm:git:git@github.com:mwjmurphy/Axel-Framework.git'
					//developerConnection 'scm:git:git@github.com:mwjmurphy/Axel-Framework.git'
					url 'scm:git@github.com:AxelFrameWork/axel-core'
					connection 'scm:git:git@github.com:AxelFrameWork/axel-core.git'
					developerConnection 'scm:git:git@github.com:AxelFrameWork/axel-core.git'
				}

				licenses {
					license {
						name 'The Apache Software License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
						distribution 'repo'
					}
				}

				developers {
					developer {
						id 'mwjmurphy'
						name 'Mike Murphy'
						email 'mwjmurphy@gmail.com'
					}
				}
			}
		}
	}
}
nexusStaging {
    username = System.getenv("ssr_user")
    password = System.getenv("ssr_password")
}
